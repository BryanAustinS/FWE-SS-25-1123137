/* tslint:disable */
/* eslint-disable */
/**
 * Trip Planner API
 * API for managing trips
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Destination
 */
export interface Destination {
    /**
     * 
     * @type {string}
     * @memberof Destination
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Destination
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof Destination
     */
    nights?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Destination
     */
    activities?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Destination
     */
    tripId: string;
    /**
     * 
     * @type {Date}
     * @memberof Destination
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Destination
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Destination interface.
 */
export function instanceOfDestination(value: object): value is Destination {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('tripId' in value) || value['tripId'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function DestinationFromJSON(json: any): Destination {
    return DestinationFromJSONTyped(json, false);
}

export function DestinationFromJSONTyped(json: any, ignoreDiscriminator: boolean): Destination {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'nights': json['nights'] == null ? undefined : json['nights'],
        'activities': json['activities'] == null ? undefined : json['activities'],
        'tripId': json['tripId'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function DestinationToJSON(json: any): Destination {
    return DestinationToJSONTyped(json, false);
}

export function DestinationToJSONTyped(value?: Destination | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'nights': value['nights'],
        'activities': value['activities'],
        'tripId': value['tripId'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

