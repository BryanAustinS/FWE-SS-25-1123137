/* tslint:disable */
/* eslint-disable */
/**
 * Trip Planner API
 * API for managing trips
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DestinationUpdate
 */
export interface DestinationUpdate {
    /**
     * 
     * @type {string}
     * @memberof DestinationUpdate
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof DestinationUpdate
     */
    startDate?: string;
    /**
     * 
     * @type {Date}
     * @memberof DestinationUpdate
     */
    endDate?: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof DestinationUpdate
     */
    activities?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DestinationUpdate
     */
    tripId?: string;
}

/**
 * Check if a given object implements the DestinationUpdate interface.
 */
export function instanceOfDestinationUpdate(value: object): value is DestinationUpdate {
    return true;
}

export function DestinationUpdateFromJSON(json: any): DestinationUpdate {
    return DestinationUpdateFromJSONTyped(json, false);
}

export function DestinationUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestinationUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'startDate': json['startDate'] == null ? undefined : json['startDate'],
        'endDate': json['endDate'] == null ? undefined : (new Date(json['endDate'])),
        'activities': json['activities'] == null ? undefined : json['activities'],
        'tripId': json['tripId'] == null ? undefined : json['tripId'],
    };
}

export function DestinationUpdateToJSON(json: any): DestinationUpdate {
    return DestinationUpdateToJSONTyped(json, false);
}

export function DestinationUpdateToJSONTyped(value?: DestinationUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'startDate': value['startDate'],
        'endDate': value['endDate'] == null ? undefined : ((value['endDate']).toISOString()),
        'activities': value['activities'],
        'tripId': value['tripId'],
    };
}

