/* tslint:disable */
/* eslint-disable */
/**
 * Trip Planner API
 * API for managing trips
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DestinationInput
 */
export interface DestinationInput {
    /**
     * 
     * @type {string}
     * @memberof DestinationInput
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof DestinationInput
     */
    startDate: string;
    /**
     * 
     * @type {Date}
     * @memberof DestinationInput
     */
    endDate: Date;
    /**
     * 
     * @type {Array<string>}
     * @memberof DestinationInput
     */
    activities?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof DestinationInput
     */
    tripId: string;
}

/**
 * Check if a given object implements the DestinationInput interface.
 */
export function instanceOfDestinationInput(value: object): value is DestinationInput {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    if (!('endDate' in value) || value['endDate'] === undefined) return false;
    if (!('tripId' in value) || value['tripId'] === undefined) return false;
    return true;
}

export function DestinationInputFromJSON(json: any): DestinationInput {
    return DestinationInputFromJSONTyped(json, false);
}

export function DestinationInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestinationInput {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'startDate': json['startDate'],
        'endDate': (new Date(json['endDate'])),
        'activities': json['activities'] == null ? undefined : json['activities'],
        'tripId': json['tripId'],
    };
}

export function DestinationInputToJSON(json: any): DestinationInput {
    return DestinationInputToJSONTyped(json, false);
}

export function DestinationInputToJSONTyped(value?: DestinationInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'startDate': value['startDate'],
        'endDate': ((value['endDate']).toISOString()),
        'activities': value['activities'],
        'tripId': value['tripId'],
    };
}

