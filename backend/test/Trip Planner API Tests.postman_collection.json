{
	"info": {
		"_postman_id": "beabb353-c46c-4df0-b759-26c86a173d9e",
		"name": "Trip Planner API Tests",
		"description": "Collection for testing Trip Planner API endpoints",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44118307",
		"_collection_link": "https://bryanaustin.postman.co/workspace/Bryan-Austin's-Workspace~3591a0af-516f-4c27-89ed-7e6f5b66beb6/collection/44118307-beabb353-c46c-4df0-b759-26c86a173d9e?action=share&source=collection_link&creator=44118307"
	},
	"item": [
		{
			"name": "Trip Operations",
			"item": [
				{
					"name": "Get All Trips Empty Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"if (pm.response.json().length > 0) {",
									"    pm.collectionVariables.set(\"tripId\", pm.response.json()[0].id);",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip"
							]
						},
						"description": "Fetches all trips"
					},
					"response": []
				},
				{
					"name": "Create Trip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has id\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"tripId\", jsonData.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Switzerland Summer Vacation\",\n    \"description\": \"Fun Summer Vacation in Switzerland\",\n    \"startDate\": \"2025-08-10\",\n    \"endDate\": \"2025-08-25\",\n    \"participants\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip"
							]
						},
						"description": "Creates a new trip"
					},
					"response": []
				},
				{
					"name": "Get All Trips",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"if (pm.response.json().length > 0) {",
									"    pm.collectionVariables.set(\"tripId\", pm.response.json()[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip"
							]
						},
						"description": "Fetches all trips"
					},
					"response": []
				},
				{
					"name": "Get Trip by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if tripId exists in collection variables and log it\r",
									"console.log(\"tripId from collection:\", pm.collectionVariables.get(\"tripId\"));\r",
									"\r",
									"// If tripId is missing in collection variables but exists in environment variables,\r",
									"// copy it to collection variables\r",
									"if (!pm.collectionVariables.get(\"tripId\") && pm.environment.get(\"tripId\")) {\r",
									"    pm.collectionVariables.set(\"tripId\", pm.environment.get(\"tripId\"));\r",
									"    console.log(\"Copied tripId from environment to collection variables\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"{{tripId}}"
							]
						},
						"description": "Fetches a trip by ID"
					},
					"response": []
				},
				{
					"name": "Get Trip using Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Trip by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/name/Switzerland Summer Vacation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"name",
								"Switzerland Summer Vacation"
							]
						},
						"description": "Searches for trips by exact name"
					},
					"response": []
				},
				{
					"name": "Search Trip by Name (Empty Response)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/name/Switzerland Spring Vacation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"name",
								"Switzerland Spring Vacation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search Trip by Name Contains",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/namecontains/Swit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"namecontains",
								"Swit"
							]
						},
						"description": "Searches for trips by partial name match"
					},
					"response": []
				},
				{
					"name": "Search Trip By Name Contains (Empty Response)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/namecontains/Germany",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"namecontains",
								"Germany"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Trip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Switzerland Winter Vacation\",\n    \"description\": \"Updated Switzerland Trip\",\n    \"startDate\": \"2025-12-10\",\n    \"endDate\": \"2025-12-25\",\n    \"participants\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trip/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"{{tripId}}"
							]
						},
						"description": "Updates an existing trip"
					},
					"response": []
				},
				{
					"name": "Update Trip with Invalid Trip Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Switzerland Winter Vacation\",\n    \"description\": \"Updated Switzerland Trip\",\n    \"startDate\": \"2025-12-10\",\n    \"endDate\": \"2025-12-25\",\n    \"participants\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trip/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Updates an existing trip"
					},
					"response": []
				},
				{
					"name": "Search Trip by Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/date/2025-12-15",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"date",
								"2025-12-15"
							]
						},
						"description": "Searches for trips by date"
					},
					"response": []
				},
				{
					"name": "Search Trip By Invalid Date Format",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function() {",
									"    pm.response.to.have.status(400);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/date/ABCDEFG",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"date",
								"ABCDEFG"
							]
						},
						"description": "Searches for trips by date"
					},
					"response": []
				}
			]
		},
		{
			"name": "Destination Operations",
			"item": [
				{
					"name": "Get All Destinations Empty Response",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"if (pm.response.json().length > 0) {",
									"    pm.collectionVariables.set(\"destinationId\", pm.response.json()[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination"
							]
						},
						"description": "Fetches all destinations"
					},
					"response": []
				},
				{
					"name": "Create Destination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response has id\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.collectionVariables.set(\"destinationId\", jsonData.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bern\",\n    \"nights\": 3,\n    \"activities\": [\"Hiking\", \"Lake Swimming\"],\n    \"tripId\": \"{{tripId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/destination",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination"
							]
						},
						"description": "Creates a new destination"
					},
					"response": []
				},
				{
					"name": "Get All Destinations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"if (pm.response.json().length > 0) {",
									"    pm.collectionVariables.set(\"destinationId\", pm.response.json()[0].id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination"
							]
						},
						"description": "Fetches all destinations"
					},
					"response": []
				},
				{
					"name": "Get Destination by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if tripId exists in collection variables and log it\r",
									"console.log(\"destinationId from collection:\", pm.collectionVariables.get(\"destinationId\"));\r",
									"\r",
									"// If tripId is missing in collection variables but exists in environment variables,\r",
									"// copy it to collection variables\r",
									"if (!pm.collectionVariables.get(\"destinationId\") && pm.environment.get(\"destinationId\")) {\r",
									"    pm.collectionVariables.set(\"destinationId\", pm.environment.get(\"destinationId\"));\r",
									"    console.log(\"Copied destinationId from environment to collection variables\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/{{destinationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"{{destinationId}}"
							]
						},
						"description": "Fetches a destination by ID"
					},
					"response": []
				},
				{
					"name": "Get Destination using Invalid Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Check if tripId exists in collection variables and log it\r",
									"console.log(\"destinationId from collection:\", pm.collectionVariables.get(\"destinationId\"));\r",
									"\r",
									"// If tripId is missing in collection variables but exists in environment variables,\r",
									"// copy it to collection variables\r",
									"if (!pm.collectionVariables.get(\"destinationId\") && pm.environment.get(\"destinationId\")) {\r",
									"    pm.collectionVariables.set(\"destinationId\", pm.environment.get(\"destinationId\"));\r",
									"    console.log(\"Copied destinationId from environment to collection variables\");\r",
									"}"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Fetches a destination by ID"
					},
					"response": []
				},
				{
					"name": "Get Destinations by Trip ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});",
									"",
									"pm.test(\"Destinations have correct trip ID\", function() {",
									"    var jsonData = pm.response.json();",
									"    if (jsonData.length > 0) {",
									"        jsonData.forEach(function(destination) {",
									"            pm.expect(destination.tripId).to.equal(pm.collectionVariables.get(\"tripId\"));",
									"        });",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/trip/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"trip",
								"{{tripId}}"
							]
						},
						"description": "Fetches all destinations for a specific trip"
					},
					"response": []
				},
				{
					"name": "Search Destination by Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/name/Bern",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"name",
								"Bern"
							]
						},
						"description": "Searches for destinations by exact name"
					},
					"response": []
				},
				{
					"name": "Search Destination by Name Contains",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response is an array\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(Array.isArray(jsonData)).to.be.true;",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/namecontains/Be",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"namecontains",
								"Be"
							]
						},
						"description": "Searches for destinations by partial name match"
					},
					"response": []
				},
				{
					"name": "Update Destination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Zürich\",\n    \"nights\": 5,\n    \"activities\": [\"Hiking\", \"Swimming\", \"Sightseeing\"],\n    \"tripId\": \"{{tripId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/destination/{{destinationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"{{destinationId}}"
							]
						},
						"description": "Updates an existing destination"
					},
					"response": []
				},
				{
					"name": "Update Destination with Invalid Destination Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Zürich\",\n    \"nights\": 5,\n    \"activities\": [\"Hiking\", \"Swimming\", \"Sightseeing\"],\n    \"tripId\": \"{{tripId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/destination/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Updates an existing destination"
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Destination with Invalid Destination Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Zürich\",\n    \"nights\": 5,\n    \"activities\": [\"Hiking\", \"Swimming\", \"Sightseeing\"],\n    \"tripId\": \"{{tripId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/destination/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Deletes a destination"
					},
					"response": []
				},
				{
					"name": "Delete Destination",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/destination/{{destinationId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"destination",
								"{{destinationId}}"
							]
						},
						"description": "Deletes a destination"
					},
					"response": []
				},
				{
					"name": "Delete Trip with Invalid Trip Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function() {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Switzerland Winter Vacation\",\n    \"description\": \"Updated Switzerland Trip\",\n    \"startDate\": \"2025-12-10\",\n    \"endDate\": \"2025-12-25\",\n    \"participants\": 3\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/trip/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"00000000-0000-0000-0000-000000000000"
							]
						},
						"description": "Deletes a trip"
					},
					"response": []
				},
				{
					"name": "Delete Trip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/trip/{{tripId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"trip",
								"{{tripId}}"
							]
						},
						"description": "Deletes a trip"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "tripId",
			"value": "",
			"type": "string"
		},
		{
			"key": "destinationId",
			"value": "",
			"type": "string"
		}
	]
}